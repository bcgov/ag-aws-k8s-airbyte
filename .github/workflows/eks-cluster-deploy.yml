name: EKS dev-Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'select the environment to deploy'
        required: true
        type: choice
        options:
        - dev
        - prod
permissions: 
  id-token: write  
  contents: read 

jobs:
  terraform:
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest

    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials for dev
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ vars.TERRAFORM_DEPLOY_DEV_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}
      
      - name: setup node.js for terraform 
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Inject admin ARN into tfvars
        run: |
          sed -i 's|<place_holder_arn>|["'"${{ vars.TERRAFORM_DEPLOY_DEV_ROLE_ARN }}"'"]|g' env/${{ inputs.environment }}.tfvars

      - name: Terraform Init
        run: |
          cd Terraform
          terraform init -reconfigure \
            -backend-config="bucket=${{ vars.TERRAFORM_BACKEND_BUCKET }}" \
            -backend-config="key=eks/${{ inputs.environment }}/terraform.tfstate" \
            -backend-config="region=${{ vars.AWS_REGION }}" \
            -backend-config="dynamodb_table=terraform-lock" \
            -backend-config="encrypt=true"

      - name: Terraform Plan
        run: |
          cd Terraform
          terraform plan -var-file="env/${{ inputs.environment }}.tfvars" -out=tfplan -input=false

      - name: Show Terraform Plan
        run: |
          cd Terraform
          terraform show tfplan

      # - name: Terraform Apply
      #   if: github.event.inputs.environment == 'dev' || github.event.inputs.environment == 'prod'
      #   run: |
      #     cd Terraform
      #     terraform apply -auto-approve tfplan
