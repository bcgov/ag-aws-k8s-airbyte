name: EKS Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select the environment to deploy'
        required: true
        type: choice
        options:
          - dev
          - prod

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::828865617457:role/github_oidc
          aws-region: ca-central-1

      - name: Bootstrap Terraform Backend (S3 + DynamoDB)
        run: |
          set -e
          BUCKET_NAME=${{ secrets.TERRAFORM_DEV_BACKEND_BUCKET }}
          REGION=ca-central-1
          TABLE_NAME=terraform-lock

          echo "Checking for S3 bucket..."
          if ! aws s3api head-bucket --bucket "$BUCKET_NAME" 2>/dev/null; then
            echo "Creating S3 bucket: $BUCKET_NAME"
            aws s3api create-bucket \
              --bucket "$BUCKET_NAME" \
              --region "$REGION" \
              --create-bucket-configuration LocationConstraint="$REGION"

            aws s3api put-bucket-versioning \
              --bucket "$BUCKET_NAME" \
              --versioning-configuration Status=Enabled

            aws s3api put-bucket-encryption \
              --bucket "$BUCKET_NAME" \
              --server-side-encryption-configuration '{
                "Rules": [{
                  "ApplyServerSideEncryptionByDefault": {
                    "SSEAlgorithm": "AES256"
                  }
                }]
              }'
          else
            echo "S3 bucket already exists. Skipping."
          fi

          echo "Checking for DynamoDB table..."
          if ! aws dynamodb describe-table --table-name "$TABLE_NAME" 2>/dev/null; then
            echo "Creating DynamoDB table: $TABLE_NAME"
            aws dynamodb create-table \
              --table-name "$TABLE_NAME" \
              --billing-mode PAY_PER_REQUEST \
              --attribute-definitions AttributeName=LockID,AttributeType=S \
              --key-schema AttributeName=LockID,KeyType=HASH \
              --region "$REGION"
          else
            echo "DynamoDB table already exists. Skipping."
          fi

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: |
          cd terraform
          terraform init -reconfigure \
            -backend-config="bucket=${{ secrets.TERRAFORM_DEV_BACKEND_BUCKET }}" \
            -backend-config="region=ca-central-1" \
            -backend-config="key=eks/${{ inputs.environment }}/terraform.tfstate" \
            -backend-config="dynamodb_table=terraform-lock" \
            -backend-config="encrypt=true"

      - name: Terraform Plan
        run: |
          cd terraform
          terraform plan -var-file="env/${{ inputs.environment }}.tfvars" -out=tfplan

      - name: Terraform Apply
        run: |
          cd terraform
          terraform apply -auto-approve tfplan
